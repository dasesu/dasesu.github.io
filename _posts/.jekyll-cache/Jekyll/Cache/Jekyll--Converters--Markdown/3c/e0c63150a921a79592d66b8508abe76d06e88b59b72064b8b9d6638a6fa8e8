I"?<p>Algunos modelos de Raspberry como la Pi Zero y Pi Zero W cuentan con un puerto USB OTG, esto permite que sean configuradas para comportarse como dispositivos perifericos virtuales como por ejemplo teclados, camaras, impresoras, entre otros, además, como versiones recientes de raspbian incluyen ConfigFS una raspberry puede comportarse como dispositivo USB de multiple proposito</p>

<h2 id="modulos-soportados">Modulos soportados:</h2>
<p><strong>Serial</strong> (g_serial) <br />
<strong>Ethernet</strong> (g_ether) <br />
<strong>Mass storage</strong> (g_mass_storage) <br />
<strong>MIDI</strong> (g_midi) <br />
<strong>Audio</strong> (g_audio) <br />
<strong>Keyboard/Mouse</strong> (g_hid) <br />
<strong>Mass storage and Serial</strong> (g_acm_ms) <br />
<strong>Ethernet and Serial</strong> (g_cdc) <br />
<strong>Multi</strong> (g_multi) – Allows you to configure 2 from Ethernet, Mass storage and Serial <br />
<strong>Webcam</strong> (g_webcam) <br />
<strong>Printer</strong> (g_printer) <br />
<strong>Gadget tester</strong> (g_zero)</p>

<h2 id="configurar-raspberry-como-teclado-usb">Configurar Raspberry como teclado usb.</h2>

<p>Agregamos la instrucción <code class="language-plaintext highlighter-rouge">dtoverlay=dwc2</code> al final del archivo /boot/config.txt y las lineas <code class="language-plaintext highlighter-rouge">dwc2</code> y <code class="language-plaintext highlighter-rouge">libcomposite</code> al archivo /etc/modules</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"dtoverlay=dwc2"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /boot/config.txt
<span class="nb">echo</span> <span class="s2">"dwc2"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/modules
<span class="nb">sudo echo</span> <span class="s2">"libcomposite"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/modules
</code></pre></div></div>

<p>ConfigFS será cargado en /sys/kernel/config/usb_gadget luego de reiniciar la raspberry.</p>

<p>La manera de interactuar con ConfigFS es por medio del arbol de directorios, para definir un nuevo dispositivo en ConfigFS se debe crear un directorio en <code class="language-plaintext highlighter-rouge">/sys/kernel/config/usb_gadget</code>, esto puede hacerse manualmente pero los cambios se perderían al iniciar el sistema, asi que necesitamos que se haga automaticamente cada vez que se inicie el sistema operativo, para eso creamos un archivo <code class="language-plaintext highlighter-rouge">/usr/bin/usbkeyboardconf</code> y lo hacemos ejecutable</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo touch</span> /usr/bin/usbkeyboardconf
<span class="nb">sudo chmod</span> +x /usr/bin/usbkeyboardconf
<span class="nb">sudo </span>vi /usr/bin/usbkeyboardconf
</code></pre></div></div>

<p>El contenido que debemos agregar al archivo <code class="language-plaintext highlighter-rouge">usbkeyboardconf</code> recien creado se muestra a continuación</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="nb">cd</span> /sys/kernel/config/usb_gadget/
<span class="nb">mkdir</span> <span class="nt">-p</span> myKeyboard
<span class="nb">cd </span>myKeyboard

<span class="nb">echo </span>0x1d6b <span class="o">&gt;</span> idVendor <span class="c"># Linux Foundation</span>
<span class="nb">echo </span>0x0104 <span class="o">&gt;</span> idProduct <span class="c"># Multifunction Composite Gadget</span>
<span class="nb">echo </span>0x0100 <span class="o">&gt;</span> bcdDevice <span class="c"># v1.0.0</span>
<span class="nb">echo </span>0x0200 <span class="o">&gt;</span> bcdUSB <span class="c"># USB2</span>

<span class="nb">mkdir</span> <span class="nt">-p</span> strings/0x409
<span class="nb">echo</span> <span class="s2">"ABCDEF"</span> <span class="o">&gt;</span> strings/0x409/manufacturer
<span class="nb">echo</span> <span class="s2">"ABCDEF Keyboard"</span> <span class="o">&gt;</span> strings/0x409/product
<span class="nb">echo</span> <span class="s2">"0123456789"</span> <span class="o">&gt;</span> strings/0x409/serialnumber

<span class="nb">mkdir</span> <span class="nt">-p</span> configs/c.1/strings/0x409
<span class="nb">echo</span> <span class="s2">"Some Configuration"</span> <span class="o">&gt;</span> configs/c.1/strings/0x409/configuration
<span class="nb">echo </span>200 <span class="o">&gt;</span> configs/c.1/MaxPower

<span class="c"># Add functions here</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> functions/hid.usb0
<span class="nb">echo </span>1 <span class="o">&gt;</span> functions/hid.usb0/protocol
<span class="nb">echo </span>1 <span class="o">&gt;</span> functions/hid.usb0/subclass
<span class="nb">echo </span>8 <span class="o">&gt;</span> functions/hid.usb0/report_length
<span class="nb">echo</span> <span class="nt">-ne</span> <span class="se">\\</span>x05<span class="se">\\</span>x01<span class="se">\\</span>x09<span class="se">\\</span>x06<span class="se">\\</span>xa1<span class="se">\\</span>x01<span class="se">\\</span>x05<span class="se">\\</span>x07<span class="se">\\</span>x19<span class="se">\\</span>xe0<span class="se">\\</span>x29<span class="se">\\</span>xe7<span class="se">\\</span>x15<span class="se">\\</span>x00<span class="se">\\</span>x25<span class="se">\\</span>x01<span class="se">\\</span>x75<span class="se">\\</span>x01<span class="se">\\</span>x95<span class="se">\\</span>x08<span class="se">\\</span>x81<span class="se">\\</span>x02<span class="se">\\</span>x95<span class="se">\\</span>x01<span class="se">\\</span>x75<span class="se">\\</span>x08<span class="se">\\</span>x81<span class="se">\\</span>x03<span class="se">\\</span>x95<span class="se">\\</span>x05<span class="se">\\</span>x75<span class="se">\\</span>x01<span class="se">\\</span>x05<span class="se">\\</span>x08<span class="se">\\</span>x19<span class="se">\\</span>x01<span class="se">\\</span>x29<span class="se">\\</span>x05<span class="se">\\</span>x91<span class="se">\\</span>x02<span class="se">\\</span>x95<span class="se">\\</span>x01<span class="se">\\</span>x75<span class="se">\\</span>x03<span class="se">\\</span>x91<span class="se">\\</span>x03<span class="se">\\</span>x95<span class="se">\\</span>x06<span class="se">\\</span>x75<span class="se">\\</span>x08<span class="se">\\</span>x15<span class="se">\\</span>x00<span class="se">\\</span>x25<span class="se">\\</span>x65<span class="se">\\</span>x05<span class="se">\\</span>x07<span class="se">\\</span>x19<span class="se">\\</span>x00<span class="se">\\</span>x29<span class="se">\\</span>x65<span class="se">\\</span>x81<span class="se">\\</span>x00<span class="se">\\</span>xc0 <span class="o">&gt;</span> functions/hid.usb0/report_desc

<span class="nb">ln</span> <span class="nt">-s</span> functions/hid.usb0 configs/c.1/

<span class="c"># End functions</span>
<span class="nb">ls</span> /sys/class/udc <span class="o">&gt;</span> UDC

</code></pre></div></div>

<p>Editamos <code class="language-plaintext highlighter-rouge">/etc/rc.local</code> para que la configuración se ejecute al iniciar el SO agregando lo siguiente antes de exit:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
/usr/bin/usbkeyboardconf
<span class="nb">exit </span>0
</code></pre></div></div>

<p>Ahora solo debemos configurar lo que se va a escribir automaticamente, para eso crearemos un script en python, podemos llamarlo como queramos, en este ejemplo lo llamamos <code class="language-plaintext highlighter-rouge">keyboard_example.py</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="n">NULL_CHAR</span> <span class="o">=</span> <span class="nb">chr</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">write_report</span><span class="p">(</span><span class="n">report</span><span class="p">):</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'/dev/hidg0'</span><span class="p">,</span> <span class="s">'rb+'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fd</span><span class="p">:</span>
        <span class="n">fd</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">report</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>


<span class="c1"># H (press shift and H)
</span><span class="n">write_report</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># e
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># ll
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>
<span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">8</span><span class="p">)</span>
<span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># o
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># SPACE
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">44</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># W (press shift and W)
</span><span class="n">write_report</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">26</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># o
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># r
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">21</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># l
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># d
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># ! (press shift and 1)
</span><span class="n">write_report</span><span class="p">(</span><span class="nb">chr</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">+</span><span class="nb">chr</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span><span class="o">+</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># Release all keys
</span><span class="n">write_report</span><span class="p">(</span><span class="n">NULL_CHAR</span><span class="o">*</span><span class="mi">8</span><span class="p">)</span>
</code></pre></div></div>

<p>Editamos nuevamente el archivo  <code class="language-plaintext highlighter-rouge">/etc/rc.local</code> para llamar a nuestro script</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
/usr/bin/usbkeyboardconf
<span class="nb">sleep </span>10
/home/pi/keyboard_example.py
<span class="nb">exit </span>0
</code></pre></div></div>

<p>Para probarlo, la raspberry debe conectarse directamente al PC por el puerto de datos con un cable que soporte OTG, no el de power.</p>

<p>Al conectar la raspberry a un PC ( por el puerto de datos unicamente ), se cargará el sistema operativo, y el archivo keyboard_example.py  será llamdo tecleando automaticamente  <code class="language-plaintext highlighter-rouge">Hello World!</code>.</p>

<p><strong>Refference:</strong></p>

<ul>
  <li><a href="https://gist.github.com/gbaman/50b6cca61dd1c3f88f41">https://gist.github.com/gbaman/50b6cca61dd1c3f88f41</a></li>
  <li><a href="https://www.rmedgar.com/blog/using-rpi-zero-as-keyboard-setup-and-device-definition">https://www.rmedgar.com/blog/using-rpi-zero-as-keyboard-setup-and-device-definition</a></li>
  <li><a href="https://cdn-learn.adafruit.com/downloads/pdf/turning-your-raspberry-pi-zero-into-a-usb-gadget.pdf">https://cdn-learn.adafruit.com/downloads/pdf/turning-your-raspberry-pi-zero-into-a-usb-gadget.pdf</a></li>
  <li><a href="https://www.isticktoit.net/?p=1383">https://www.isticktoit.net/?p=1383</a></li>
  <li><a href="https://gpiozero.readthedocs.io/en/stable/pi_zero_otg.html">https://gpiozero.readthedocs.io/en/stable/pi_zero_otg.html</a></li>
</ul>

:ET